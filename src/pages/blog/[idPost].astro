---
import { config, getApiUrl } from "config";
import type Blog from "src/models/Blog";
import Layout from "src/layouts/Layout.astro";

// Obtener todos los blogs para generar las rutas estáticas
// Obtener todos los blogs para generar las rutas estáticas
export async function getStaticPaths() {
  const res = await fetch(getApiUrl(config.endpoints.blogs.list));
  if (!res.ok) throw new Error("Error al obtener la lista de blogs");

  const { data: blogs }: { data: Blog[] } = await res.json();

  return blogs.map((blog) => ({
    params: { idPost: blog.id.toString().trim() }, // Asegurar que sea string
  }));
}

// Obtener el blog específico basado en el ID
const { idPost } = Astro.params;
const res = await fetch(getApiUrl(config.endpoints.blogs.detail(idPost)));
if (!res.ok) throw new Error("Error al obtener el contenido del blog");

const { data: blog }: { data: Blog } = await res.json();
---

<Layout title={blog.titulo}>
  <div class="bg-teal-500 flex flex-col min-h-screen">
    {/* SECCIÓN HERO */}
    <header class="relative w-full h-[30rem]">
      <img
        src={blog.imagenPrincipal}
        alt={blog.titulo}
        class="w-full h-full object-cover"
      />
      <div
        class="absolute top-0 left-0 w-full h-full bg-black bg-opacity-40 flex flex-col items-start justify-center"
      >
        <div class="max-w-6xl mx-auto px-4">
          <h1 class="text-white text-4xl md:text-6xl font-bold mb-4">
            {blog.titulo}
          </h1>
          <p class="text-white text-xl md:text-2xl">
            {blog.subTituloBlog}
          </p>
        </div>
      </div>
    </header>

    {/* CONTENIDO */}
    <main
      class="relative z-10 -mt-24 flex-grow max-w-6xl mx-auto px-4 py-10 bg-white rounded-lg shadow-lg mb-10"
    >
      {/* FECHA */}
      <div
        class="inline-block px-3 py-1 bg-teal-600 text-white text-sm rounded-full mb-4"
      >
        Fecha de publicación no disponible
      </div>

      <div class="flex flex-col md:flex-row justify-between items-center mb-6">
        <h2 class="text-3xl md:text-4xl font-bold text-teal-600 mb-2 md:mb-0">
          {blog.tituloBlog}
        </h2>
        <p class="text-xl md:text-2xl text-gray-700">
          {blog.subTituloBlog}
        </p>
      </div>

      {/* CONTENIDO DEL BLOG */}
      {
        blog.imagenesBlog.map((imagen, index) => (
          <section class="mb-10">
            <div
              class={`flex flex-col md:flex-row items-start ${index % 2 === 1 ? "md:flex-row-reverse" : ""}`}
            >
              <img
                src={imagen}
                alt="Imagen del blog"
                class="w-full md:w-1/2 h-auto rounded-lg object-cover mb-6 md:mb-0 md:mr-6"
              />
              <div class="md:w-1/2">
                <p class="text-gray-700 text-lg md:text-xl mb-4">
                  {blog.parrafoImagenesBlog[index] || "Texto no disponible"}
                </p>
              </div>
            </div>
          </section>
        ))
      }

      {/* VIDEO DEL BLOG */}
      {
        blog.videoBlog && (
          <section class="bg-teal-700 p-6 rounded-lg">
            <h1 class="text-white md:text-xl font-bold mb-4">
              {blog.tituloVideoBlog}
            </h1>
            <div class="relative w-full h-[30rem]">
              <video controls class="w-full h-full rounded-lg">
                <source src={blog.videoBlog} type="video/mp4" />
                Tu navegador no soporta videos.
              </video>
            </div>
          </section>
        )
      }
    </main>
  </div>
</Layout>
