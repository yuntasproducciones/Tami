---
import Layout from "src/layouts/Layout.astro";
import type Producto from "src/models/Product";
import boxSize from "@icons/box-size.svg";
import { getApiUrl, config } from "config";

export async function getStaticPaths() {
  const res = await fetch(getApiUrl(config.endpoints.productos.list));
  if (!res.ok) throw new Error("Error al obtener productos");

  const data = await res.json();
  const productos: Producto[] = data.data;

  return productos.map((producto) => ({
    params: { idProducto: producto.id },
    props: { producto }, // Pasamos el producto como prop
  }));
}

const { producto } = Astro.props; // Ahora el producto viene desde las props
if (!producto) {
  throw new Error("Producto no encontrado");
}

// Obtener los productos relacionados
const relatedProducts = await Promise.all(
  producto.relatedProducts.map(async (id: string) => {
    const res = await fetch(
      getApiUrl(`${config.endpoints.productos.list}/${id}`)
    );
    if (!res.ok) return null;
    const data = await res.json();
    return data.data;
  })
).then((results) => results.filter((p) => p !== null)); // Filtramos nulos en caso de error
---

<Layout title={producto.nombreProducto}>
  <div class="w-full">
    {/* Hero Banner */}
    <div
      class="pt-32 md:pt-40 pb-1 md:pb-16 bg-gradient-to-b from-[#15988f] to-[#1cdfd5] text-white relative overflow-hidden"
    >
      <div class="max-w-6xl md:w-1/2 px-4 md:px-6 py-8 md:py-12 relative z-10">
        <div class="flex items-center gap-2 mb-2">
          <div class="w-5 md:w-6 h-5 md:h-6">
            <svg viewBox="0 0 24 24" fill="currentColor" class="w-full h-full">
              <path d="M5 13l4 4L19 7"></path>
            </svg>
          </div>
          <h2 class="text-xl md:text-2xl font-bold">{producto.title}</h2>
        </div>
        <h1 class="text-2xl md:text-4xl font-bold mb-6 md:mb-8">
          {producto.subtitle}
        </h1>
        <button
          class="bg-white text-teal-500 px-8 md:px-12 py-2 md:py-3 rounded-full font-bold text-lg md:text-xl hover:bg-opacity-90 transition"
        >
          ¡COTÍZALO!
        </button>
      </div>
      <div
        class="hidden md:block absolute right-0 top-32 w-full md:w-1/2 h-full bg-white rounded-bl-[30%] md:rounded-bl-[50%] rounded-tl-[40%] md:rounded-tl-[60%] rounded-tr-[15%] md:rounded-tr-[25%] items-center justify-center"
      >
        <img
          src={producto.image}
          alt={producto.title}
          class="w-3/4 md:w-4/5 h-3/4 md:h-4/5 object-contain mx-auto my-auto"
        />
      </div>
    </div>

    {/* Main Content */}
    <div class="max-w-6xl mx-auto px-4 md:px-6 py-6 md:py-8">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
        {/* Left Column - Gallery */}
        <div class="space-y-4">
          {/* Imagen principal */}
          <div
            class="md:max-w-[440px] aspect-square bg-gray-100 rounded-lg overflow-hidden"
          >
            <img
              src={producto.image}
              alt="producto"
              class="w-full h-full object-contain"
            />
          </div>

          {/* Grid de miniaturas */}
          <div class="grid grid-cols-4 gap-2 w-full md:max-w-[440px]">
            {
              producto.images
                ?.slice(0, 4)
                .map((image: string, index: number) => (
                  <div class="aspect-square bg-gray-100 rounded-lg overflow-hidden cursor-pointer hover:opacity-80 transition">
                    <img
                      src={image}
                      alt={`Thumbnail ${index + 1}`}
                      class="w-full h-full object-cover"
                    />
                  </div>
                ))
            }
          </div>
        </div>

        {/* Right Column - Product Info */}
        <div>
          <div class="mb-6">
            <h3 class="text-xl font-bold mb-2">
              {/* Información del producto: */}
              {producto.title}
            </h3>
            <p class="text-gray-700">{producto.description}</p>
          </div>

          <div class="border rounded-lg mb-6">
            <div class="flex border-b">
              <a
                class={`flex-1 p-4 font-bold text-teal-500 border-b-2 border-teal-500`}
              >
                Detalles del producto
              </a>
            </div>

            <div class="p-6">
              <h3 class="font-bold mb-2">Descripción:</h3>
              <ul class="space-y-2 text-gray-700">
                {
                  Object.entries(producto.specs).map(([key, value]) => (
                    <li>{`${key}: ${value}`}</li>
                  ))
                }
              </ul>

              <h3 class="font-bold mt-4 mb-2">Dimensiones:</h3>
              <div class="flex items-start gap-8">
                <div class="w-24">
                  <img src={boxSize.src} alt="Box Size" class="w-full h-auto" />
                </div>
                <ul class="space-y-2">
                  {
                    Object.entries(producto.dimensions).map(([key, value]) => (
                      <li class="flex items-center gap-2">
                        <span class="w-5 h-5 bg-teal-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                          {key.charAt(0).toUpperCase()}
                        </span>
                        {`${key}: ${value}`}
                      </li>
                    ))
                  }
                </ul>
              </div>
            </div>
          </div>

          <button
            class="w-full bg-teal-500 text-white py-4 rounded-full font-bold text-xl hover:bg-teal-600 transition"
          >
            COTIZACIÓN
          </button>
        </div>
      </div>

      {/* Similar Products */}
      <div class="mt-8 md:mt-12">
        <h2 class="text-xl md:text-2xl font-bold mb-4 md:mb-6 text-teal-500">
          ARTÍCULOS SIMILARES
        </h2>
        <div
          class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 md:gap-6"
        >
          {
            relatedProducts.length > 0 &&
              relatedProducts.map((relatedProduct) => (
                <a
                  href={`/products/${relatedProduct.id}`}
                  class="group cursor-pointer"
                >
                  <div class="aspect-video bg-gray-100 rounded-lg overflow-hidden mb-2">
                    <img
                      src={relatedProduct.image}
                      alt={relatedProduct.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition"
                    />
                  </div>
                  <h3 class="text-center font-bold text-xs md:text-sm">
                    {relatedProduct.title}
                  </h3>
                </a>
              ))
          }
        </div>
      </div>
    </div>
  </div>
</Layout>
